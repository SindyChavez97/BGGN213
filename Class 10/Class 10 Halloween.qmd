---
title: "Class 10"
author: "Sindy Chavez"
format: pdf
---

## Background

# 1. Importing candy data

In this mini-project we will examine 538 Halloween Candy data. What is your favorite candy? What is nougat anyway? And how do you say it in America?

First step is to read the data...

```{r}
candy <- read.csv("candy-data.txt", row.names=1)
head(candy)
```


> Q1. How many different candy types are in this dataset?


```{r}
nrow(candy)
```


> Q2. How many fruity candy types are in the dataset?

```{r}
sum(candy$fruity)
```

# 2. What is your favorate candy?

```{r}
rownames(candy)
```


> Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

Sour Patch Tricksters

```{r}
candy["Sour Patch Kids", ]$winpercent
```


> Q4. What is the winpercent value for “Kit Kat”?

```{r}
candy["Kit Kat", ]$winpercent
```

> Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy["Tootsie Roll Snack Bars", ]$winpercent
```
```{r}
skimr::skim(candy)
```


> Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

Yes, winpercent

> Q7. What do you think a zero and one represent for the candy$chocolate column?

Logical (T/F) value, since R returns a 1 for any T value and 0 for any F value


> Q8. Plot a histogram of winpercent values

```{r}
hist(candy$winpercent)
```

```{r}
library(ggplot2)

ggplot(candy)+
       aes(winpercent)+
       geom_histogram(bins=10, col="magenta", fill="pink")
       
```

> Q9. Is the distribution of winpercent values symmetrical?

No

> Q10. Is the center of the distribution above or below 50%?

Below

> Q11. On average is chocolate candy higher or lower ranked than fruit candy?

```{r}
chocolate.inds <- as.logical(candy$chocolate)
chocolate.win <- candy[chocolate.inds, ]$winpercent
mean(chocolate.win)

```
```{r}
fruity.inds <- as.logical(candy$fruity)
fruity.win <- candy[fruity.inds, ]$winpercent
mean(fruity.win)
```
```{r}
t.test(chocolate.win, fruity.win)
```


> Q12. Is this difference statistically significant?

Yes


# 3. Overall Candy Rankings

The base R 'sort()' and 'order()' functions are very useful!

```{r}

x <- c(5,1,2,6)
sort(x)

```

```{r}
x[order(x)]
```


```{r}
y <- c("barry", "alice", "chandra")
y
sort(y)
order(y)
```

```{r}
inds <- order(candy$winpercent)
inds
head(candy[inds,], n=5)
```


> Q13. What are the five least liked candy types in this set?

```{r}
head(candy[order(candy$winpercent),], n=5)
```




> Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
tail(candy[order(candy$winpercent),], n=5)
```



# Barplot
> Q15. Make a first barplot of candy ranking based on winpercent values.

The default barplot, made with 'geom_col' has the bars in the order they are in the datasest...

```{r}
p <- ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent))+
  geom_col()
```



```{r}
ggsave("mybarplot.png", p)
```

Let’s setup a color vector (that signifies candy type) that we can then use for some future plots. We start by making a vector of all black values (one for each candy). Then we overwrite chocolate (for chocolate candy), brown (for candy bars) and red (for fruity candy) values.

```{r}
my_cols <- rep("black", nrow(candy))
#my_cols
my_cols[as.logical(candy$chocolate)] <- "chocolate"
my_cols[as.logical(candy$bar)] <- "blue"
my_cols[as.logical(candy$fruity)] <- "hotpink"
my_cols
```

> Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

Now I can use this vector to color up my barplot

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent))+
  geom_col(fill=my_cols)
```

> Q17. What is the worst ranked chocolate candy?

Charleston Chew


> Q18. What is the best ranked fruity candy?

Starburst





# 4. Taking a look at pricepercent

What about value for money?
What is the best candy for the least money?
One way to get at this would be to make a plot of 'winpercent' vs the 'pricepercent' variable.


```{r}
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text(col=my_cols)
```


Not a very useful plot

Better plot below




```{r}
library(ggrepel)
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text_repel(col=my_cols, size=2, max.overlaps = 13)
```

> Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

Reeses Miniatures

> Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

```{r}
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord,c(11,12)], n=5 )
```


Least popular Nik L Nip



> Q21. Make a barplot again with geom_col() this time using pricepercent and then improve this step by step, first ordering the x-axis by value and finally making a so called “dot chat” or “lollipop” chart by swapping geom_col() for geom_point() + geom_segment().

```{r}
ggplot(candy) +
  aes(pricepercent, reorder(rownames(candy), pricepercent)) +
  geom_segment(aes(yend = reorder(rownames(candy), pricepercent), 
                   xend = 0), col="gray40") +
    geom_point()
```











## 5. Exploring the correlation structure 

 
```{r}
library(corrplot)
cij <- cor(candy)
corrplot(cij)
```
 
> Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Chocolate and Fruity

> Q23. Similarly, what two variables are most positively correlated?
 
Bar and Chocolate
 
 
 
 
## 6. PCA: Principal Component Analysis

The main function that is always there for us is 'prcomp()'. It has an important argument that is set to 'scale=FALSE'by default.

```{r}
pca <- prcomp(candy, scale=TRUE)
summary(pca)
```

 My PCA plot (a.k.a.) PC1 vs PC2 score plot.
 
```{r}
plot(pca$x[,1], pca$x[,2], col=my_cols, pch=16)
```

 
 I will make a "nicer" plot with ggplot. 
 ggplot only works with data.frames as input so I need to make one for it first...
 
```{r}
# Make a new data-frame with our PCA results and candy data
my_data <- cbind(candy, pca$x[,1:3])

```
 
```{r}
p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, label=rownames(my_data)) +
        geom_point(col=my_cols)+
  geom_text_repel(col=my_cols, max.overlaps=14)

p
```
 
 

```{r}
p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=my_cols)

p
```



```{r}

p + geom_text_repel(size=3.3, col=my_cols, max.overlaps = 7)  + 
  theme(legend.position = "none") +
  labs(title="Halloween Candy PCA Space",
       subtitle="Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (red), other (black)",
       caption="Data from 538")
```


Sometimes labels are hard to see, you can make a plot where you can roll your mouse over the points to see the name (but it only works in html :( )


library(plotly)

ggplotly(p) 







Let's look at PCA

```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```


> Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

Fruity, hard, and pluribus. Yes, when we look at our correlation plot, fruity candies correlate with hard and pluribus.





